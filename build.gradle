plugins {
	id "org.springframework.boot" version "${springBootVersion}"
	id "io.spring.dependency-management" version "1.0.9.RELEASE"
	id "java"
}

println testContainersVersion

group = "com.example"
version = "0.0.1-SNAPSHOT"
sourceCompatibility = "11"

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/milestone" }
}

dependencies {
	implementation "org.springframework.boot:spring-boot-starter-web"
	implementation "org.springframework.boot:spring-boot-starter-oauth2-resource-server"
	implementation "com.auth0:java-jwt:${auth0JavaJwtVersion}"
	implementation "com.github.dasniko:testcontainers-keycloak:1.3.0"
	testImplementation("org.springframework.boot:spring-boot-starter-test") {
		exclude group: "org.junit.vintage", module: "junit-vintage-engine"
	}
	testCompile "org.junit.jupiter:junit-jupiter:${junitJupiterVersion}"
	testCompile "org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}"
	testCompile "org.junit.jupiter:junit-jupiter-params:${junitJupiterVersion}"
	testCompile "org.testcontainers:testcontainers:${testContainersVersion}"
	testCompile "org.testcontainers:junit-jupiter:${testContainersVersion}"
//	testImplementation "org.junit.jupiter:junit-jupiter" // downloaded?
//	testImplementation "org.testcontainers:junit-jupiter" // downloaded?
	testCompile "org.assertj:assertj-core"
	testCompile "org.keycloak:keycloak-admin-client:9.0.0"
	testImplementation "org.springframework.security:spring-security-test"
}

test {
	useJUnitPlatform()

	testLogging {
		events "passed", "skipped", "failed"
	}
}
